@implements IDisposable
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<div class="page">
    <DxGridLayout CssClass="page-layout">
        <Rows>
            <DxGridLayoutRow Areas="sidebar header" Height="auto"></DxGridLayoutRow>
            <DxGridLayoutRow Areas="sidebar content"></DxGridLayoutRow>
        </Rows>
        <Columns>
            <DxGridLayoutColumn Width="auto" />
            <DxGridLayoutColumn />
        </Columns>
        <Items>
            <DxGridLayoutItem Area="sidebar" CssClass="layout-sidebar">
                <Template>
                    <NavMenu />
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Area="content" CssClass="content px-4">
                <Template>
                    <div class="py-4 w-100">
                        @if(!string.IsNullOrEmpty(NavigationManager.ToBaseRelativePath(NavigationManager.Uri))) {
                            <NavLink href="/" class="button-link">
                                <DxButton RenderStyle="@ButtonRenderStyle.Dark" Text="Back to Home" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-back"></DxButton>
                            </NavLink>
                        }
                        <AuthorizeView>
                            <Authorized>
                                <form action="Account/Logout" method="post" class="button-link float-end">
                                    <AntiforgeryToken />
                                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                    <DxButton RenderStyle="@ButtonRenderStyle.Dark" SubmitFormOnClick="true" Text="Log out" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-log-out"></DxButton>
                                </form>
                                <NavLink href="Account/Manage" class="button-link float-end">
                                    <DxButton RenderStyle="@ButtonRenderStyle.Dark" Text="@context.User.Identity?.Name" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-user"></DxButton>
                                </NavLink>
                            </Authorized>
                            <NotAuthorized>
                                <NavLink href="Account/Login" class="button-link float-end">
                                    <DxButton RenderStyle="@ButtonRenderStyle.Dark" Text="Log in" RenderStyleMode="@ButtonRenderStyleMode.Text" CssClass="menu-button" IconCssClass="icon icon-log-in"></DxButton>
                                </NavLink>
                            </NotAuthorized>
                        </AuthorizeView>
                    </div>
                    @Body
                </Template>
            </DxGridLayoutItem>
        </Items>
    </DxGridLayout>
</div>
@code {
    private string? currentUrl;

    protected override void OnInitialized() {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e) {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose() {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}