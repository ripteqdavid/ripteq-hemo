@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using HemoStat.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if(externalLogins.Length == 0) {
    <div class="info-message">
        <span>See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a> to enable external login.</span>
    </div>
} else {
    <form class="external-logins" action="Account/PerformExternalLogin" method="post">
        <AntiforgeryToken />
        <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
        @foreach(var provider in externalLogins) {
            <DxButton CssClass="w-100" SubmitFormOnClick="true" RenderStyleMode="ButtonRenderStyleMode.Outline" name="provider" value="@provider.Name" Text="@provider.DisplayName"></DxButton>
        }
    </form>
}

@code {
    private AuthenticationScheme[] externalLogins = [];

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync() {
        externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }
}